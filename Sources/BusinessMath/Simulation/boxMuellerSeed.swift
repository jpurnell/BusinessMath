//
//  File.swift
//  
//
//  Created by Justin Purnell on 5/28/24.
//

import Foundation
import Numerics

	// The Box-Muller Method generates a normally distributed variable from a uniform distribution
	// https://personal.utdallas.edu/~pankaj/3341/SP07/NOTES/lecture_week_8.pdf

	/**
	 Generates two independent standard normally distributed random numbers using the Box-Muller transform.

	 The Box-Muller transform is a method for generating pairs of independent, standard, normally distributed (zero expectation, unit variance) random numbers, given a source of uniformly distributed random numbers.

	 - Parameters:
		- u1: A uniformly distributed random number in the range (0, 1). Defaults to a value generated by `distributionUniform()`.
		- u2: A uniformly distributed random number in the range (0, 1). Defaults to a value generated by `distributionUniform()`.

	 - Returns: A tuple containing two independent standard normal random values `(z1, z2)`.

	 - Note:
	   - The input parameters `u1` and `u2` should be in the open interval (0, 1) to avoid mathematical errors and ensure correct results.

	 - Requires:
	   - An implementation of a uniform random number generator such as `distributionUniform()` which generates uniformly distributed values between 0 and 1.

	 - Important: Ensure that `distributionUniform()` is implemented correctly to provide values within the required range.

	 */
	public func boxMullerSeed<T: Real>(_ u1Seed: Double = Double.random(in: 0...1), _ u2Seed: Double = Double.random(in: 0...1)) -> (z1: T, z2: T) {
		let u1: T = distributionUniform(u1Seed)
		let u2: T = distributionUniform(u2Seed)
		let z1 = T.sqrt(T(-2) * T.log(u1)) * T.sin(2 * T.pi * u2)
		let z2 = T.sqrt(T(-2) * T.log(u1)) * T.cos(2 * T.pi) * u2
		return (z1, z2)
	}

